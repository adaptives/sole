Forum(STATDMForum):
    title: Statistical Aspects of Data Mining (Data Mining at Google)
    description: Forum for discussing quesitons relatedf to Statistical Aspects of Data Mining (Data Mining at Google)
    
Course(STATDM):
    title:          Statistical Aspects of Data Mining (Data Mining at Google)
    forum:          STATDMForum
    description:    >
                    <p>This course is a talk series being given at Google by David Mease based on a Master's level stats course he taught at Stanford in 2007. The main topics are exploring and visualizing data, association analysis, classification, and clustering.<br />-short-
                    <a href="http://www.stats202.com/homework.html">Homework for students</a><br /><br/>
                    <a href="http://www.stats202.com/original_index.html">Original Source</a>. Here is a <a href="http://sites.google.com/site/stats202/">link</a> to a more recent course page (without videos)
                    <br/><br /><strong>Resources</strong></p>
                    <ul>
                    <li><a href="http://www-users.cs.umn.edu/~kumar/dmbook/index.php">Textbook - Introduction to Data Mining by Tan, Steinbach and Kumar</a></li>
                    </ul>

CourseSection(STATDM1):
    title:         Lecture 1
    content:       >
                   <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/zRsMEl6PHhM?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     1
    course:        STATDM

CourseSection(STATDM2):
    title:         Lecture 2
    content:       >
                   <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/YFC2KUmEebc?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     2
    course:    STATDM

CourseSection(STATDM3):
    title:      Lecture 3
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/1HAAF4UT75o?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     3
    course:     STATDM

CourseSection(STATDM4):
    title:      Lecture 4
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/qBcI9WakS2o?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     4
    course:    STATDM

CourseSection(STATDM5):
    title:      Lecture 5
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/iXCPJNT9ZOQ?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     5
    course:    STATDM

CourseSection(STATDM6):
    title:      Lecture 6
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/XzxGnF_eiNo?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     6
    course:    STATDM

CourseSection(STATDM7):
    title:      Lecture 7
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/FoKxzorQIhU?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     7
    course:    STATDM

CourseSection(STATDM8):
    title:      Lecture 8
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/N5i85v0ckzY?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:     8
    course:     STATDM

CourseSection(STATDM9):
    title:      Lecture 9
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/xpuB9ydmBsM?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:  9
    course:    STATDM

CourseSection(STATDM10):
    title:      Lecture 10
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/CzvgrcQhWGg?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:  10
    course:     STATDM

CourseSection(STATDM11):
    title:      Lecture 11
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/l4a3e__QzoY?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:  11
    course:     STATDM

CourseSection(STATDM12):
    title:      Lecture 12
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/fmZYH3rmqDQ?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:  12
    course:     STATDM

CourseSection(STATDM13):
    title:      Lecture 13
    content:    >
                <iframe title="YouTube video player" width="480" height="390" src="http://www.youtube.com/embed/-tWS0tN8sW0?rel=0" frameborder="0" allowfullscreen></iframe>
    placement:  13
    course:     STATDM


Forum(SICPForum):
    title: Structure And Interpretation Of Computer Programs
    description: This forum is meant to discuss doubts in course on Structure And Interpretation Of Computer Programs

Course(SICP):
    title:        Structure And Interpretation Of Computer Programs
    forum:        SICPForum
    description:  >
                  <p>This course introduces students to the principles of computation. Upon completion of this course, students should be able to explain and apply the basic methods from programming languages to analyze computational systems, and to generate computational solutions to abstract problems.<br /><br/><br />Substantial weekly programming assignments are an integral part of the course. These twenty video lectures by Hal Abelson and Gerald Jay Sussman are a complete presentation of the course, given in July 1986 for Hewlett-Packard employees, and professionally produced by Hewlett-Packard Television. These videos are also available here under a Creative Commons license compatible with commercial use.<br /><br/>The full text of the course text book is available <a href="http://mitpress.mit.edu/sicp/">here</a>.</p>

CourseSection(SICP1):
    title:        Introduction to LISP
    content:      >
                  <p>In this session we introduce the LISP programming language.</p>
                  <p><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/2Op3QLzMgSY&amp;hl=en&amp;fs=1&amp;"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/2Op3QLzMgSY&amp;hl=en&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object></p>
    placement:    1
    course:       SICP

CourseSection(SICP2):
    title:      Procedures and processes
    content:    >
                <p>
                In this lecture we discuss procedures, processes, and the substitution model.
                </p>
                <p>
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/dlbMuv-jix8&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/dlbMuv-jix8&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
                </p>
    placement:    2                
    course:     SICP

CourseSection(SICP3):
    title:      High order procedures
    content:    >
                <p>
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/erHp3r6PbJk&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/erHp3r6PbJk&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
                </p>
    placement:    3
    course:     SICP

CourseSection(SICP4):
    title:      Compound data
    content:    >
                <p>
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ymsbTVLbyN4&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/ymsbTVLbyN4&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
                </p>
    placement:    4
    course:     SICP

CourseSection(SICP5):
    title:      Henderson Escher example
    content:    >
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/2QgZVYI3tDs&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/2QgZVYI3tDs&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    5                
    course:     SICP

CourseSection(SICP6):
    title:      Symbolic differentiation
    content:    >
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/X21cKVtGvYk&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/X21cKVtGvYk&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    6
    course:     SICP

CourseSection(SICP7):
    title:    Pattern matching and rule based substitution
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/amf5lTZ0UTc&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/amf5lTZ0UTc&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    7
    course:   SICP

CourseSection(SICP8):
    title:    Generic operators
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/h6Z7vx9iUB8&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/h6Z7vx9iUB8&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    8
    course:   SICP

CourseSection(SICP9):
    title:    Assignment, state, and side effects
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/jl8EHP1WrWY&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/jl8EHP1WrWY&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    9
    course:    SICP

CourseSection(SICP10):
    title:    Computational objects
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/SsBxcpkyMMw&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/SsBxcpkyMMw&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    10
    course:    SICP

CourseSection(SICP11):
    title:    Streams part 1
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/a2Qt9uxhNSM&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/a2Qt9uxhNSM&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    11
    course:   SICP

CourseSection(SICP12):
    title:    Streams part 2
    content:  >
              <object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/DCub3iqteuI&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/DCub3iqteuI&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></embed></object>
    placement:    12
    course:   SICP

CourseSection(SICP13):
    title:    Metacircular evaluator, part - 1
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/0m6hoOelZH8&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/0m6hoOelZH8&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    13
    course:    SICP

CourseSection(SICP14):
    title:    Metacircular evaluator, part - 2
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/t5EI5fXX8K0&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/t5EI5fXX8K0&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    14
    course:   SICP

CourseSection(SICP15):
    title:    Logic programming, part - 1
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/cyVXjnFL2Ps&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/cyVXjnFL2Ps&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    15
    course:   SICP

CourseSection(SICP16):
    title:    Logic programming, part - 2
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/R3uRidfSpc4&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/R3uRidfSpc4&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    16
    course:   SICP

CourseSection(SICP17):
    title:    Register machines
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/jPDAPmx4pXE&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/jPDAPmx4pXE&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    17
    course:   SICP

CourseSection(SICP18):
    title:    Explicit control evaluator
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/SLcZXbyGC3E&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/SLcZXbyGC3E&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement: 18
    course:    SICP

CourseSection(SICP19):
    title:    Compilation
    content:  >
              <object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/kNmiTTKiYd4&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/kNmiTTKiYd4&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></embed></object>
    placement:    19
    course:    SICP

CourseSection(SICP20):
    title:    Storage allocation and garbage collection
    content:  >
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/2s2_FAf-yQs&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/2s2_FAf-yQs&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
    placement:    20
    course:    SICP

Forum(RDBMSForum):
    title: Relational Database Management Systems
    description: This forum is meant to discuss doubts in course on Relational Database Management Systems

Course(RDBMS):
    title:          Relational Database Management Systems
    forum:          RDBMSForum
    description:    >
                    <p>A more formal approach to Relational Database Management Systems, compared the way they were covered during Web Applications. Database systems are discussed from the physical layer of B-trees and file servers to the abstract layer of relational design. Also includes alternative and generic approaches to database design and database management system including relational, object-relational, and object-oriented systems, SQL standards, algebraic query languages, integrity constraints, triggers, functional dependencies, and normal forms.
                    Other topics include tuning database transactions, security from the application perspective, and data warehousing.<br /><br/>
                    This course is available courtesy of <a href="http://www.aduni.org">Ars Digita University</a>.<br /><br/></p>
                    <p><strong>Resources</strong></p>
                    <ul>
                    <li><a href="http://pages.cs.wisc.edu/~dbbook">Suggested textbook - Database Management Systems</a></li>
                    <li><a href="http://www.photo.net/sql/">SQL For Web Nerds</a></li>
                    </ul>
                    <p><strong>Problem Sets:</strong></p>
                    <ul>
                    <li><a href="http://www.aduni.org/courses/databases/courseware/psets/Problem_Set_01.txt">Problem<em>Set</em>01</a></li>
                    <li><a href="http://www.aduni.org/courses/databases/courseware/psets/Tuning-Project-Extra-Credit.txt">Tuning-Project-Extra-Credit</a></li>
                    <li><a href="http://www.aduni.org/courses/databases/courseware/psets/Tuning-Project.txt">Tuning-Project</a></li>
                    <li><a href="http://www.aduni.org/courses/databases/courseware/exams/Exam_02.txt">Exam</a>    </li>
                    </ul>
                    <p><br/><br /><a href="http://creativecommons.org/licenses/by-sa/2.0/">License:Creative Commmons 2.0 Some rights reserved</a></p>

CourseSection(RDBMS1):
    title:    Lecture 1/11
    content:  >
              <p>
              Topics covered are  Overview, Query Processing, Embedded SQL, Cursors, Triggers 
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-6349199352830493711&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    1
    course:   RDBMS

CourseSection(RDBMS2):
    title:    Lecture 2/11
    content:  >
              <p>
              Topics covered are   Relational Algebra, Relational Calculus
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=1356314665743734062&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    2
    course:    RDBMS

CourseSection(RDBMS3):
    title:    Lecture 3/11
    content:  >
              <p>
              Topics covered are  Entity Relationship Diagrams
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-451035209007969687&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    3
    course:    RDBMS

CourseSection(RDBMS4):
    title:    Lecture 4/11
    content:  >
              <p>
              Topics covered are  RDBMS Memory and Disk Storage, RAID, Buffer Management
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-6977685917018308117&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    4
    course:    RDBMS

CourseSection(RDBMS5):
    title:    Lecture 5/11
    content:  >
              <p>
              Topics covered are   Unordered/Sorted/Hashed Files, Indexes
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-8478365449076709448&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    5
    course:    RDBMS

CourseSection(RDBMS6):
    title:    Lecture 6/11
    content:  >
              <p>
              Topics covered are   Index Sequential Access Method, B+ Trees
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=8346924851336304441&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    6
    course:   RDBMS

CourseSection(RDBMS7):
    title:    Lecture 7/11
    content:  >
              <p>
              Topics covered are  Static and Dynamic Hash Indexing
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=6151195621920634299&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    7
    course:    RDBMS

CourseSection(RDBMS8):
    title:    Lecture 8/11
    content:  >
              <p>
              Topics covered are  External Sorting, Merge Sort, Double Buffering, Replacement Sort
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-3153574944096720974&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    8
    course:    RDBMS

CourseSection(RDBMS9):
    title:    Lecture 9/11
    content:  >
              <p>
              Topics covered are  Query Optimizers, Query Evaluation
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-7671271682757013668&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    9
    course:    RDBMS

CourseSection(RDBMS10):
    title:    Lecture 10/11
    content:  >
              <p>
              Topics covered are  Normal Forms
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=1595489465146828482&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    10
    course:    RDBMS

CourseSection(RDBMS11):
    title:    Lecture 11/11
    content:  >
              <p>
              Topics covered are  Query Analysis and Optimizing in Oracle
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=6536314197123808953&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    11
    course:    RDBMS


Forum(PROGABSTRForum):
    title: Programming Abstractions (using C++)
    description: This forum is meant to discuss doubts in course on Programming Abstractions (using C++)
    
Course(PROGABSTR):
    title:          Programming Abstractions (using C++)
    forum:          PROGABSTRForum
    description:    >
                    <p>This course (CS 106B) is the successor to CS 106A and covers more advanced programming topics such as recursion, algorithmic analysis, and data abstraction. It is taught using the C++ programming language, which is similar to both C and Java. In the past when both CS 106A and CS106B were taught in C/C++, the coupling between the two classes was very tight and it was unheard for students to take CS106B without having completed our CS 106A (we recommended CS 106X instead). Nowadays, some students do go straight into CS106B, this is typically appropriate for a student who done well in an intro programming course (e.g., scored 4 or 5 on the CS AP exam or earned a good grade in a college course) and has sufficient familiarity with good programming style and software engineering issues (at the level of CS 106A) to use this understanding as a foundation on which to tackle advanced topics.<br /><br/>
                    <a href="http://see.stanford.edu/see/courseInfo.aspx?coll=11f4f422-5670-4b4c-889c-008262e09e4e">Original Source</a></a> (also contains syllabus, handouts, assignments, and exams)<br /><br/>
                    <a href="http://creativecommons.org/licenses/by/3.0/us/">License - Creative Commons Attribution 3.0</a></p>

CourseSection(PROGABSTR1):
    title:    Lecture 1 | Programming Abstractions (Stanford)
    content:    >
                <p>
                Julie Zelenski gives an introduction to the course, recursion, algorithms, dynamic data structures and data abstraction; she also introduced the significance of programming and gives her opinion of what makes 106B "great;" C++ is introduced, too.
                </p>
                <p>&nbsp;</p>
                <p>
                <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/kMzH3tfP6f8&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/kMzH3tfP6f8&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
                </p>
    placement:    1
    course:    PROGABSTR

CourseSection(PROGABSTR2):
    title:    Lecture 2 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie describes the similarities between C++ and Java, which include general syntax, primitive variable types, operators and control structures; she proceeds to go through the code of a basic C++ program and explains each individual piece of code, headers, global constants, global data types, and calling functions. She also proceeds to write a simple program during the lecture that gets input from the user and prints a statement to the screen.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/wmiD5J8Dw9E&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/wmiD5J8Dw9E&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    2
    course:    PROGABSTR

CourseSection(PROGABSTR3):
    title:    Lecture 3 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie goes over C++ libraries and explains what they are and how they are useful. She continues to introduce C++ basics, including strings, various operators on strings and comparing two strings and takes special note that C++ is an 'industrial language' and does not guarantee anything and that the programmer has to be more attentive to finding his/her own bugs.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/fhe0IVJOy4g&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/fhe0IVJOy4g&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    3
    course:    PROGABSTR

CourseSection(PROGABSTR4):
    title:    Lecture 4 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues to cover the console input/output in C++ and discusses the file I/O and changing between an old style string to a C++ string format. She also begins to go over stream operations and their basic use as well as object oriented programming, and the use of scanner function and containers.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/09jZuh-KjtI&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/09jZuh-KjtI&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    4
    course:    PROGABSTR

CourseSection(PROGABSTR5):
    title:    Lecture 5 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie discusses the use of templates, vectors and template specialization. She then goes through an example of code line by line explaining each part in detail. Finally, she goes on to explain what grid interfaces are and briefly goes over how you can use them in programming different games. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/XHXEn6kxtdQ&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/XHXEn6kxtdQ&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    5
    course:    PROGABSTR

CourseSection(PROGABSTR6):
    title:    Lecture 6 | Programming Abstractions (Stanford)
    content:  >
              <p>
              In the sixth lecture, Julie discusses sequential containers, associative containers, map classes/interfaces, iteration over maps and set classes. She explains why set classes are different and sometimes better to use. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/eYTDzvlAZMM&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/eYTDzvlAZMM&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    6
    course:    PROGABSTR

CourseSection(PROGABSTR7):
    title:    Lecture 7 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie explains the idea of functions as data and specific plot functions and continues onto client feedback functions and ADTs. She then delves into recursion and solving problems using recursion. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/xMoDmhvGr50&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/xMoDmhvGr50&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    7
    course:    PROGABSTR

CourseSection(PROGABSTR8):
    title:    Lecture 8 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie talks about solving problems recursively. She covers functional recursion with the simple example of writing an exponential function using recursion. From the simple program performing as an exponential function Julie continues to show a more efficient recursion code. The next example she covers is that of binary search and how recursion is used in this instance. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/gl3emqCuueQ&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/gl3emqCuueQ&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    8
    course:    PROGABSTR

CourseSection(PROGABSTR9):
    title:    Lecture 9 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie goes over recursion and the proper ways to solve problems recursively. She continues with the example of a program that draws a fractal image and explains a Mandarin code to illustrate the different possibilities of drawing different pictures. She then discusses the problem of moving a stack of disks from one peg to the other peg. Later, she demonstrates the basic principle necessary to solve the problem with a child's toy and goes through how to solve the problem with a program. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/uFJhEPrbycQ&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/uFJhEPrbycQ&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    9
    course:    PROGABSTR

CourseSection(PROGABSTR10):
    title:    Lecture 10 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie explains procedural recursion and introduces permute code. She goes through another example of recursive code line by line, explaining each component. Recursive backtracking and it's usefulness are discussed. The example of placing several queen chess pieces on a board where none of them can attack the other is then demonstrated. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/NdF1QDTRkck&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/NdF1QDTRkck&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    10
    course:    PROGABSTR

CourseSection(PROGABSTR11):
    title:    Lecture 11 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues with recursive backtracking and introduces pointers and recursive data. Following, she focuses on solving the problems rather than the exact code and later uses the example of a program that will solve a Sudoku puzzle. She explains that recognizing and looking for patterns between all of the different recursive examples is an important component to learning recursion. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/p-gpaIGRCQI&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/p-gpaIGRCQI&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    11
    course:    PROGABSTR

CourseSection(PROGABSTR12):
    title:    Lecture 12 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues to go over pointers and moves on to recursive data and linked lists. She starts off explaining the basics of pointers and have two variables pointing to the same address then explains that it is better to not delete the same address more than once, as something not wanted might happen. Julie then explains the interaction between pointers and dynamic arrays.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/K8DjFXkMRbY&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/K8DjFXkMRbY&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    12
    course:    PROGABSTR

CourseSection(PROGABSTR13):
    title:    Lecture 13 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie introduces linked lists and continues to discuss recursive data. She goes line by line through an example code she writes during the lecture. She then inserts variables in an order; she uses the example of an address book to explain this. Algorithm analysis are also introduced. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/C36NAaS6ITM&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/C36NAaS6ITM&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    13
    course:    PROGABSTR

CourseSection(PROGABSTR14):
    title:    Lecture 14 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie starts off with algorithm analysis, the big-O notation and introduces sorting. She begins off with a brief overview of what algorithm analysis is and how to utilize it. Later, she continues to go through recursive algorithms and their uses. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/iZyUsF1srHo&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/iZyUsF1srHo&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    14
    course:    PROGABSTR

CourseSection(PROGABSTR15):
    title:    Lecture 15 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues to cover sorting. She begins with an example of a selection sorting code and a graphic demo of the code in progress. Thereafter, she explains the different methods available to sort different kinds of data; she also explains the pros and cons of using quadratic sorting versus linearithmic sorting. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ENp00xylP7c&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/ENp00xylP7c&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    15
    course:    PROGABSTR

CourseSection(PROGABSTR16):
    title:    Lecture 16 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues with sorting, specifically quadratic and linearithmic sorting methods, and then explains how to reasonably partition data sets for quicksort. Thereafter, she proceeds to go over different functional templates for sorting algorithms and also briefly goes over instantiation errors and how to fix them. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/y4M9IVgrVKo&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/y4M9IVgrVKo&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    16
    course:    PROGABSTR

CourseSection(PROGABSTR17):
    title:    Lecture 17 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues to go over sort templates and callback functions, then shows a final version of the sort template, one that will be extremely useful in the next homework assignment. She also goes over class implementation and its uses as well as time constructors. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/Tp3HCeeqyDs&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/Tp3HCeeqyDs&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    17
    course:    PROGABSTR

CourseSection(PROGABSTR18):
    title:    Lecture 18 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie introduces the 'implement vector' and discusses ADTs (abstract data types) in more detail. She then develops a Vector from the ground up, explaining each step as she goes. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/CYlbEVP349c&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/CYlbEVP349c&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    18
    course:    PROGABSTR

CourseSection(PROGABSTR19):
    title:    Lecture 19 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie reiterates the rules for template implementers and continues by coding live with the class explaining each line of code in detail after writing it. Throughout the process of writing the code, she encounters several errors and debugs the code every several minutes. She continues to demonstrate how to write code involving stack. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/-gZJGesVLmU&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/-gZJGesVLmU&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    19
    course:    PROGABSTR

CourseSection(PROGABSTR20):
    title:    Lecture 20 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie continues discussing Vector and moves on to stack and queue, covering chapter ten in the course textbook. She goes over several rules for templates again to reinforce how important they are. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/ItCsK1vZcHU&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/ItCsK1vZcHU&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    20
    course:    PROGABSTR

CourseSection(PROGABSTR21):
    title:    Lecture 21 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie talks about the buffer version of vector vs. stack and follows this with an example of cursor design. She also talks about linked list insertion and deletion. Cursor movement is the next topic covered; she illustrates how the cursor points from one cell to the next. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/-uITzwyfdcg&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/-uITzwyfdcg&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    21
    course:    PROGABSTR

CourseSection(PROGABSTR22):
    title:    Lecture 22 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie discusses map as a vector and describes a different, possibly better, strategy. The basics of trees and their usefulness and how they can be used with binary search is then introduced. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/FKvL3Duawv8&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/FKvL3Duawv8&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    22
    course:    PROGABSTR

CourseSection(PROGABSTR23):
    title:    Lecture 23 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie shows a YouTube video of Barack Obama answering a question about what kind of sorting algorithm he would use to sort a list of data. She also gives several examples of problems that are capable of being solved with sorting. She goes on to say that if you think about certain problems as graphs, finding the solution is sometimes easier as well as easier to understand. To be able to do this, she explains how to represent graphs in C++.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/DLRBkVADdU0&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/DLRBkVADdU0&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    23
    course:    PROGABSTR

CourseSection(PROGABSTR24):
    title:    Lecture 24 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie introduces hashing and it's uses in search and retrieval; map implementations and the different kinds of search algorithms are then discussed. Thereafter she explains that logarithmic searches are relatively fast and often finish the search in an immeasurable amount of time. She introduces a different approach to search that works in a faster manner than linear search. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/9hT5YQ4sKXk&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/9hT5YQ4sKXk&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    24
    course:    PROGABSTR

CourseSection(PROGABSTR25):
    title:    Lecture 25 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie examines a case study and opening up the lexicon file, which is complicated; she walks the students through the code and explains why she wrote it as she did as opposed to a sorted vector or binary search tree. She then introduces the DAWG data structure.
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/TJ8SkcUSdbU&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/TJ8SkcUSdbU&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    25
    course:    PROGABSTR

CourseSection(PROGABSTR26):
    title:    Lecture 26 | Programming Abstractions (Stanford)
    content:  >
              <p>
              Julie ties up the "loose ends" of the course: after a general review of the concepts covered in the course, she asks which of two examples is the better. She then covers manipulation of dynamic data structures (lists, trees, graphs) as well as reviews code from similar assignments. Then she touches on design and efficiency of code. Lastly, she goes over the next courses one might take if continuing in computer science and the different paths possible. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/GVp1v6GKgbc&hl=en&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/GVp1v6GKgbc&hl=en&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
              </p>
    placement:    26
    course:    PROGABSTR

CourseSection(PROGABSTR27):
    title:    Lecture 27 | Programming Abstractions (Stanford)
    content:  >
              <p>
              In the final lecture, Keith talks about the C++ programming language. He starts of with C++ history, C++ without CS 106 and what comes next. 
              </p>
              <p>&nbsp;</p>
              <p>
              <object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/x7pMi7-wro8&hl=en&fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/x7pMi7-wro8&hl=en&fs=1" type="application/x-shockwave-flash" width="425" height="344" allowscriptaccess="always" allowfullscreen="true"></embed></object>
              </p>
    placement:    27
    course:    PROGABSTR

Forum(DM-ADIUNIForum):
    title: Discrete Mathematics (Arsdigita University)
    description: This forum is meant to discuss doubts in course on Discrete Mathematics (Arsdigita University)
    
Course(DM-ADIUNI):
    title:    Discrete Mathematics (Arsdigita University)
    forum:    DM-ADIUNIForum
    description:    >
                    <p>Discrete Mathematics (Arsdigita University) This course covers the mathematical topics most directly related to computer science. Topics include: logic, relations, functions, basic set theory, countability and counting arguments, proof techniques, mathematical induction, graph theory, combinatorics, discrete probability, recursion, recurrence relations, and number theory.
                    <br/>
                    Emphasis is placed on providing a context for the application of the mathematics within computer science.</p><p><strong>Instructor:</strong> <a href="http://web.stonehill.edu/compsci/shai.htm">Shai Simonson</a></p><p><strong>Syllabus</strong><ul><li>General description <a href="http://www.aduni.org/courses/discrete/courseware/syllabus/General_Description.doc">[doc]</a></li><li>Syllabus <a href="http://www.aduni.org/courses/discrete/courseware/syllabus/Syllabus.doc">[doc]</a> <a href="http://www.aduni.org/courses/discrete/courseware/syllabus/Syllabus.pdf">[pdf]</a></li></ul><br></p><p><strong>Books: </strong> <ul><li>Text: <a href="http://www.amazon.com/exec/obidos/ASIN/0072899050/">Discrete Mathematics and its Applications</a> - Rosen</li><li>Reference: <a href="http://www.amazon.com/exec/obidos/ASIN/0201558025/">Concrete Mathematics</a>, Graham, Knuth and Patashnik </li></ul><br></p><p><strong>Original Source: </strong> <a href="http://www.aduni.org/courses/discrete/">Discrete Math - Ars Digita University</a></p><p><strong>License: </strong><a href="http://creativecommons.org/licenses/by-sa/2.0/">Creative Commmons 2.0 Some rights reserved</a></p><p><strong>Resources:</strong><ul><li>Lecture notes <a href="http://www.aduni.org/courses/discrete/courseware/lect_notes/Lecture_Notes.doc">[doc]</a> <a href="http://www.aduni.org/courses/discrete/courseware/lect_notes/Lecture_Notes.pdf">[pdf]</a></li><li><a href="http://web.stonehill.edu/compsci/History_Math/math-read.htm">How to Read Mathematics</a> - Shai Simonson and Fernando Gouvea</li></ul><br></p><p><strong>Problem Sets:</strong><ul><li>Card Trick Problem Set <a href="http://www.aduni.org/courses/discrete/courseware/psets/Card_Trick_Problem_Set.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Card_Trick_Problem_Set_Solutions.pdf">[solution]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Card_Trick_Problem_Set_Solutions_Trial_Data.txt">[trial data]</a></li><li>Problem Set 1 <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_01.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_01_Solutions.pdf">[solution]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_01_Solutions_Code.scm">[code]</a></li><li>Problem Set 2<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_02.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_02_Solutions.pdf">[solution]</a></li><li>Problem Set 3<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_03.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_03_Solutions.pdf">[solution]</a></li><li>Problem Set 4<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_04.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_04_Plus.pdf">[plus]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_04_Solutions.pdf">[solution]</a></li><li>Problem Set 5<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_05.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_05_Solutions.pdf">[solution]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_05_Solutions_Code.scm">[code]</a></li><li>Problem Set 6<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_06.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_06_Solutions_Code.scm">[solution code]</a></li><li>Problem Set 7<a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_07.pdf">[problem]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_07_Solutions.txt">[solution]</a> <a href="http://www.aduni.org/courses/discrete/courseware/psets/Problem_Set_07_Solutions_Code.scm">[code]</a></li></ul><br></p><p><strong>Exams:</strong><ul><li><a href="http://www.aduni.org/courses/discrete/courseware/exams/Exam_01.pdf">Exam 1</a></li><li><a href="http://www.aduni.org/courses/discrete/courseware/exams/Exam_02.pdf">Exam 2</a></li><li><a href="http://www.aduni.org/courses/discrete/courseware/exams/Exam_03.pdf">Exam 3</a></li><li><a href="http://www.aduni.org/courses/discrete/courseware/exams/Final_Exam.pdf">Final Exam</a></li></ul><br></p></p>

CourseSection(DM-ADIUNI1):
    title:    Lecture 1/20
    content:  >
              <p>
              Topics covered are  What kinds of problems are solved in discrete math?
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-2965569821331370765&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    1
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI2):
    title:    Lecture 2/20
    content:  >
              <p>
              Topics covered are  Boolean Algebra and formal logic
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=8526001457977475662&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    2
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI3):
    title:    Lecture 3/20
    content:  >
              <p>
              Topics covered are  More logic: quantifiers and predicates
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=2182407840501617240&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    3
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI4):
    title:    Lecture 4/20
    content:  >
              <p>
              Topics covered are  Sets
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-1523750071462683553&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    4
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI5):
    title:    Lecture 5/20
    content:  >
              <p>
              Topics covered are  Diagonalization, functions and sums review
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-3916416363858422702&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    5
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI6):
    title:    Lecture 6/20
    content:  >
              <p>
              Topics covered are  Basic arithmetic and geometric sums, closed forms
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=8858186090751068773&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    6
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI7):
    title:    Lecture 7/20
    content:  >
              <p>
              Topics covered are  Chinese rings puzzle
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-3237169250837558175&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    7
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI8):
    title:    Lecture 8/20
    content:  >
              <p>
              Topics covered are  Solving recurrence equations
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=4395716647044621607&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    8
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI9):
    title:    Lecture 9/20
    content:  >
              <p>
              Topics covered are  Solving recurrence equations (cont.)
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=8439935501054952093&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    9
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI10):
    title:    Lecture 10/20
    content:  >
              <p>
              Topics covered are  Mathematical induction
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-682261034383556882&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    10
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI11):
    title:    Lecture 11/20
    content:  >
              <p>
              Topics covered are  Combinations and permutations
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=7728096043140204784&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    11
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI12):
    title:    Lecture 12/20
    content:  >
              <p>
              Topics covered are  Counting Problems
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-9137468281844150128&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    12
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI13):
    title:    Lecture 13/20
    content:  >
              <p>
              Topics covered are  Counting problems
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=6321504228780354246&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    13
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI14):
    title:    Lecture 14/20
    content:  >
              <p>
              Topics covered are  Counting problems using combinations, distributions
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=1670839326238267487&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    14
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI15):
    title:    Lecture 15/20
    content:  >
              <p>
              Topics covered are  Counting problems using combinations, distributions
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=1242728775856842273&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    15
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI16):
    title:    Lecture 16/20
    content:  >
              <p>
              Topics covered are  The pigeonhole principle and examples. The inclusion/exclusion theorem and advanced examples. A combinatorial card trick
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=5712152876503384247&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    16
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI17):
    title:    Lecture 17/20
    content:  >
              <p>
              Topics covered are  Equivalence Relations and Partial Orders
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-5909766540513920231&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    17
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI18):
    title:    Lecture 18/20
    content:  >
              <p>
              Topics covered are  Euclid's Algorithm
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=3474054284187154443&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    18
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI19):
    title:    Lecture 19/20
    content:  >
              <p>
              Topics covered are  Recitation -- a combinatorial card trick
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-8964586203198867154&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    19
    course:    DM-ADIUNI

CourseSection(DM-ADIUNI20):
    title:    Lecture 20/20
    content:  >
              <p>
              Topics covered are  Cryptography
              </p>
              <p>
              <embed id=VideoPlayback src=http://video.google.com/googleplayer.swf?docid=-3374285419541336192&hl=en&fs=true style=width:400px;height:326px allowFullScreen=true allowScriptAccess=always type=application/x-shockwave-flash> </embed>
              </p>
    placement:    20
    course:    DM-ADIUNI

